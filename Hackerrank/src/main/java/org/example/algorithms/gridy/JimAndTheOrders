package org.example.algorithms.greedy;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

public class JimAndTheOrders {
    public static void main(String[] args) {

    }

    public static List<Integer> jimOrders(List<List<Integer>> orders) {
        int[][] o = orders.stream().map(a -> a.stream().mapToInt(Integer::intValue).toArray()).toArray(int[][]::new);

        class Pair {
            int finish;
            int customer;

            Pair(int f, int c) {
                finish = f;
                customer = c;
            }
        }
        List<Pair> order = new ArrayList<>();
        for (int i = 0; i < o.length; i++) {
            order.add(new Pair(o[i][0] + o[i][1], i + 1));
        }
        Collections.sort(order, new Comparator<Pair>() {
            public int compare(Pair o1, Pair o2) {
                if (o1.finish < o2.finish) {
                    return -1;
                } else if (o1.finish == o2.finish) {
                    if (o1.customer < o2.customer) {
                        return -1;
                    } else {
                        return 1;
                    }
                } else {
                    return 1;
                }
            }
        });
        List<Integer> r = new ArrayList<>();
        for (int i = 0; i < order.size(); i++) {
            r.add(order.get(i).customer);
        }
        return r;
    }
}
